
/* This query roughly produces the menu structure. */

FOR group IN grouping
    SORT group.num
    LET children = (
        FOR division IN 1..1 OUTBOUND group `root_edges`
        SORT division.num
        LET parents = MERGE(FOR category IN 1..1 INBOUND division `root_edges`
        RETURN {[category.type] : category})
        RETURN UNSET_RECURSIVE(MERGE(division, parents),  '_rev', '_id', '_key', 'num', 'grouping')
    )

    RETURN UNSET({name: group.name, uid: group.uid, children: children}, '_rev', '_id', '_key', 'num')

/* UNSET is significantly slower than cherry-picking only the attributes you want*/

/* return all language objects */
FOR l IN language
    return l

/* return all language objects as a key: value mapping */
RETURN MERGE( /* Merges array of documents into one */
    FOR l IN language
        RETURN {[l.uid] : l} /* Set the key as the uid */
)

/* MERGE: Trying to merge 50000 documents failed with a timeout. Not sure why
because python can do the equivilant in the blink of an eye. Seems safe to assume
merge is not optimized for large result sets. */


